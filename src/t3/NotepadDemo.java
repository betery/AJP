/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package t3;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import lab1.ReadFileDemo;

/**
 *
 * @author Toshiba
 */
public class NotepadDemo extends javax.swing.JFrame {

    /**
     * Creates new form NotepadDemo
     */
    public NotepadDemo() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NotepadDemo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(NotepadDemo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(NotepadDemo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(NotepadDemo.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupLanguage = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        mnuCopy = new javax.swing.JMenuItem();
        mnuPaste = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        mnuLanguageEnable = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuNew = new javax.swing.JMenuItem();
        mnuOpen = new javax.swing.JMenuItem();
        mnuSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuExit = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuFind = new javax.swing.JMenuItem();
        mnuFormat = new javax.swing.JMenu();
        mnuWordwrap = new javax.swing.JCheckBoxMenuItem();
        mnuLanguage = new javax.swing.JMenu();
        mnuEnglish = new javax.swing.JRadioButtonMenuItem();
        mnuVietnamese = new javax.swing.JRadioButtonMenuItem();

        mnuCopy.setText("Copy");
        jPopupMenu1.add(mnuCopy);

        mnuPaste.setText("Paste");
        jPopupMenu1.add(mnuPaste);

        mnuLanguageEnable.setSelected(true);
        mnuLanguageEnable.setText("Enable Language");
        mnuLanguageEnable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuLanguageEnableItemStateChanged(evt);
            }
        });
        jPopupMenu2.add(mnuLanguageEnable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtContent.setColumns(20);
        txtContent.setRows(5);
        txtContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtContentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtContent);

        jMenuBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuBar1MouseClicked(evt);
            }
        });

        mnuFile.setMnemonic('F');
        mnuFile.setText("File");

        mnuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnuNew.setText("New");
        mnuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuNewActionPerformed(evt);
            }
        });
        mnuFile.add(mnuNew);

        mnuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mnuOpen.setText("Open");
        mnuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuOpen);

        mnuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnuSave.setText("Save");
        mnuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuSave);
        mnuFile.add(jSeparator2);

        mnuSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mnuSaveAs.setText("Save as...");
        mnuSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSaveAsActionPerformed(evt);
            }
        });
        mnuFile.add(mnuSaveAs);
        mnuFile.add(jSeparator1);

        mnuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnuExit.setText("Exit");
        mnuFile.add(mnuExit);

        jMenuBar1.add(mnuFile);

        mnuEdit.setText("Edit");

        mnuFind.setText("Find");
        mnuFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFindActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuFind);

        jMenuBar1.add(mnuEdit);

        mnuFormat.setText("Format");

        mnuWordwrap.setText("Word wrap");
        mnuWordwrap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuWordwrapItemStateChanged(evt);
            }
        });
        mnuFormat.add(mnuWordwrap);

        jMenuBar1.add(mnuFormat);

        mnuLanguage.setText("Language");

        groupLanguage.add(mnuEnglish);
        mnuEnglish.setSelected(true);
        mnuEnglish.setText("English");
        mnuEnglish.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuEnglishItemStateChanged(evt);
            }
        });
        mnuLanguage.add(mnuEnglish);

        groupLanguage.add(mnuVietnamese);
        mnuVietnamese.setText("Vietnamese");
        mnuVietnamese.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuVietnameseItemStateChanged(evt);
            }
        });
        mnuLanguage.add(mnuVietnamese);

        jMenuBar1.add(mnuLanguage);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    File currentFile = null;
    String content = "";
    
    private void mnuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new TextFilter());
        int option = fileChooser.showOpenDialog(this);
        if(option == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            // read and display
            readFile(f);
            content = txtContent.getText();
            currentFile = f;
            this.setTitle(f.getName() + " - MyNotepad");
        }
    }//GEN-LAST:event_mnuOpenActionPerformed

    private void readFile(File f) {
        txtContent.setText("");
        try (
            BufferedReader bf = new BufferedReader(
                    new FileReader(f));
        ) {
            String line;
            while((line = bf.readLine()) != null) {
                txtContent.append(line + "\n");
            }
        } catch (IOException ex) {
            Logger.getLogger(ReadFileDemo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void mnuSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSaveAsActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        if(option == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            if(f.exists()) {
                int opt = JOptionPane.showConfirmDialog(this, "Replace ?");
                if(opt == JOptionPane.OK_OPTION) {
                    save(f);
                    this.setTitle(f.getName() + " - MyNotepad");
                }
            } else {
                save(f);
                this.setTitle(f.getName() + " - MyNotepad");
            }
        }
    }//GEN-LAST:event_mnuSaveAsActionPerformed

    private void save(File f) {
        try (PrintWriter pw = new PrintWriter(f)) {
            pw.print(txtContent.getText());
            pw.flush();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ReadFileDemo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void mnuWordwrapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuWordwrapItemStateChanged
        txtContent.setLineWrap(mnuWordwrap.isSelected());
    }//GEN-LAST:event_mnuWordwrapItemStateChanged

    private void mnuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSaveActionPerformed
        if(currentFile == null) {
            mnuSaveAsActionPerformed(evt);
        } else {
            save(currentFile);
        }
    }//GEN-LAST:event_mnuSaveActionPerformed

    private void mnuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuNewActionPerformed
        // check content of TextArea: changed or not
        if(content.equals(txtContent.getText())) {
            this.setTitle("Untitled - MyNotepad");
            currentFile = null;
            txtContent.setText("");
        } else {
            int opt = JOptionPane.showConfirmDialog(this, "Save ?");
            if(opt == JOptionPane.OK_OPTION) {
                mnuSaveActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_mnuNewActionPerformed
    
    FindDialog findDialog;
    private void mnuFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFindActionPerformed
        if(findDialog == null) {
            findDialog = new FindDialog(this, false);
        }
        findDialog.setVisible(true);
    }//GEN-LAST:event_mnuFindActionPerformed

    private void txtContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContentMouseClicked
        if(evt.getButton() == evt.BUTTON3) {
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_txtContentMouseClicked

    private void jMenuBar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MouseClicked
        if(evt.getButton() == evt.BUTTON3) {
            jPopupMenu2.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jMenuBar1MouseClicked

    private void mnuLanguageEnableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuLanguageEnableItemStateChanged
        mnuLanguage.setEnabled(mnuLanguageEnable.isSelected());
    }//GEN-LAST:event_mnuLanguageEnableItemStateChanged

    private void mnuEnglishItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuEnglishItemStateChanged
        changeLanguage();
    }//GEN-LAST:event_mnuEnglishItemStateChanged

    private void mnuVietnameseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuVietnameseItemStateChanged
        changeLanguage();
    }//GEN-LAST:event_mnuVietnameseItemStateChanged

    void changeLanguage() {
        String languageCode = "";
        String countryCode = "";
        if(mnuVietnamese.isSelected()) {
            languageCode = "vi";
            countryCode = "VN";
        }
        Locale locale = new Locale(languageCode, countryCode);
        ResourceBundle rb = ResourceBundle.getBundle("t3/language", locale);
        mnuFile.setText(rb.getString("File"));
        mnuNew.setText(rb.getString("New"));
        mnuOpen.setText(rb.getString("Open"));
        mnuSave.setText(rb.getString("Save"));
        mnuSaveAs.setText(rb.getString("Save_as"));
        mnuExit.setText(rb.getString("Exit"));
        mnuEdit.setText(rb.getString("Edit"));
        mnuFormat.setText(rb.getString("Format"));
        mnuLanguage.setText(rb.getString("Language"));
        mnuEnglish.setText(rb.getString("English"));
        mnuVietnamese.setText(rb.getString("Vietnamese"));
    }
    
    public void find(String keyword) {
        String content = txtContent.getText();
        int start = content.indexOf(keyword);
        if(start < 0) {
            JOptionPane.showMessageDialog(this, "Not found");
        } else {
            txtContent.setSelectionStart(start);
            txtContent.setSelectionEnd(start + keyword.length());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotepadDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotepadDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotepadDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotepadDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotepadDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup groupLanguage;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem mnuCopy;
    private javax.swing.JMenu mnuEdit;
    private javax.swing.JRadioButtonMenuItem mnuEnglish;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFind;
    private javax.swing.JMenu mnuFormat;
    private javax.swing.JMenu mnuLanguage;
    private javax.swing.JCheckBoxMenuItem mnuLanguageEnable;
    private javax.swing.JMenuItem mnuNew;
    private javax.swing.JMenuItem mnuOpen;
    private javax.swing.JMenuItem mnuPaste;
    private javax.swing.JMenuItem mnuSave;
    private javax.swing.JMenuItem mnuSaveAs;
    private javax.swing.JRadioButtonMenuItem mnuVietnamese;
    private javax.swing.JCheckBoxMenuItem mnuWordwrap;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables
}
